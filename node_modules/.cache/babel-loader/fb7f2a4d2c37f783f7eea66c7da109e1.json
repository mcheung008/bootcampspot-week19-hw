{"ast":null,"code":"import _slicedToArray from\"C:/Users/mc024/OneDrive/Documents/GitHub/bootcampspot-week19-hw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{useState,useEffect}from'react';import Search from'./Search';import DataTable from'./DataTable';import API from'../utils/API';export default function Body(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),employees=_useState2[0],setEmployees=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),employeesCopy=_useState4[0],setEmployeesCopy=_useState4[1];useEffect(function(){API.getUsers().then(function(response,err){if(err)throw err;setEmployees(response.data.results);setEmployeesCopy(response.data.results);});},[]);function handleClick(event){event.preventDefault();var searchName=document.querySelector('#searchName');var filteredEmployees=employees.filter(function(employee){return employee.name.first.toUpperCase()===searchName.value.toUpperCase();});console.log('filterEmployees: ',filteredEmployees);if(filteredEmployees.length===0){setEmployeesCopy(employees);}else{setEmployeesCopy(filteredEmployees);}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Search,{handleClick:handleClick}),/*#__PURE__*/_jsx(DataTable,{employees:employeesCopy})]});}","map":{"version":3,"sources":["C:/Users/mc024/OneDrive/Documents/GitHub/bootcampspot-week19-hw/src/components/Body.js"],"names":["useState","useEffect","Search","DataTable","API","Body","employees","setEmployees","employeesCopy","setEmployeesCopy","getUsers","then","response","err","data","results","handleClick","event","preventDefault","searchName","document","querySelector","filteredEmployees","filter","employee","name","first","toUpperCase","value","console","log","length"],"mappings":"mUAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,eACOL,QAAQ,CAAC,EAAD,CADf,wCACpBM,SADoB,eACTC,YADS,8BAEeP,QAAQ,CAAC,EAAD,CAFvB,yCAEpBQ,aAFoB,eAELC,gBAFK,eAG3BR,SAAS,CAAC,UAAY,CAClBG,GAAG,CAACM,QAAJ,GAAeC,IAAf,CAAoB,SAAUC,QAAV,CAAoBC,GAApB,CAAyB,CACzC,GAAIA,GAAJ,CAAS,KAAMA,CAAAA,GAAN,CACTN,YAAY,CAACK,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAZ,CACAN,gBAAgB,CAACG,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAhB,CACH,CAJD,EAKH,CANQ,CAMN,EANM,CAAT,CAQA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACxBA,KAAK,CAACC,cAAN,GACA,GAAIC,CAAAA,UAAU,CAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAjB,CACA,GAAIC,CAAAA,iBAAiB,CAAGhB,SAAS,CAACiB,MAAV,CAAiB,SAAAC,QAAQ,CAAI,CACjD,MAAQA,CAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,WAApB,KAAsCR,UAAU,CAACS,KAAX,CAAiBD,WAAjB,EAA9C,CACH,CAFuB,CAAxB,CAGAE,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCR,iBAAjC,EACA,GAAIA,iBAAiB,CAACS,MAAlB,GAA6B,CAAjC,CAAoC,CAChCtB,gBAAgB,CAACH,SAAD,CAAhB,CACH,CAFD,IAEM,CACFG,gBAAgB,CAACa,iBAAD,CAAhB,CACH,CACJ,CACD,mBACI,wCACI,KAAC,MAAD,EAAQ,WAAW,CAAEN,WAArB,EADJ,cAEI,KAAC,SAAD,EAAW,SAAS,CAAER,aAAtB,EAFJ,GADJ,CAMH","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Search from './Search';\r\nimport DataTable from './DataTable';\r\nimport API from '../utils/API';\r\n\r\nexport default function Body() {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [employeesCopy, setEmployeesCopy] = useState([]);\r\n    useEffect(function () {\r\n        API.getUsers().then(function (response, err) {\r\n            if (err) throw err;\r\n            setEmployees(response.data.results);\r\n            setEmployeesCopy(response.data.results);\r\n        })\r\n    }, []);\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        let searchName = document.querySelector('#searchName');\r\n        let filteredEmployees = employees.filter(employee => {\r\n            return (employee.name.first.toUpperCase() === searchName.value.toUpperCase());\r\n        });\r\n        console.log('filterEmployees: ', filteredEmployees);\r\n        if (filteredEmployees.length === 0) {\r\n            setEmployeesCopy(employees);\r\n        } else{\r\n            setEmployeesCopy(filteredEmployees);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Search handleClick={handleClick} />\r\n            <DataTable employees={employeesCopy} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}